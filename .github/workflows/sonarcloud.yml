name: SonarCloud Security Analysis

on:
  push:
    branches:
      - master
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  sonarcloud:
    name: SonarCloud SAST Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for better analysis

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Build and run tests with coverage
        run: mvn clean verify

      - name: SonarCloud Scan (fire-and-forget)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed for PR decoration
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          # Run Sonar analysis without blocking on Quality Gate here; we'll query the API for a clearer status step below
          mvn sonar:sonar \
            -Dsonar.projectKey=${{ secrets.SONAR_ORGANIZATION }}_cicd-demo-practical_4a- \
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }} \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.qualitygate.wait=false || true

      - name: Install jq (for JSON parsing)
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Fetch SonarCloud Quality Gate status
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          set -euo pipefail
          PROJECT_KEY="${{ secrets.SONAR_ORGANIZATION }}_cicd-demo-practical_4a-"
          # Derive a branch name from GITHUB_REF when possible
          BRANCH="${GITHUB_REF#refs/heads/}"
          echo "Querying SonarCloud for project: $PROJECT_KEY branch: $BRANCH"
          RESPONSE=$(curl -s -u "${SONAR_TOKEN}:" "https://sonarcloud.io/api/qualitygates/project_status?projectKey=${PROJECT_KEY}&branch=${BRANCH}")
          echo "$RESPONSE" | jq .
          STATUS=$(echo "$RESPONSE" | jq -r '.projectStatus.status')
          echo "Quality Gate status: $STATUS"
          if [ "$STATUS" = "ERROR" ] || [ "$STATUS" = "FAILED" ]; then
            echo "Quality Gate failed. Conditions:"
            echo "$RESPONSE" | jq -r '.projectStatus.conditions[] | "- metric: \(.metricKey) - status: \(.status) - message: \(.message) - actual: \(.actualValue) - expected: \(.errorThreshold)"'
            echo "Check full details at: https://sonarcloud.io/dashboard?id=${{ secrets.SONAR_ORGANIZATION }}_cicd-demo-practical_4a-&branch=${BRANCH}"
            exit 1
          fi