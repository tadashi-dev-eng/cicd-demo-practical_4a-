name: Weekly Security Monitoring

on:
  schedule:
    - cron: '0 2 * * 1'  # Weekly on Monday at 2 AM UTC
  workflow_dispatch:  # Allow manual trigger

jobs:
  scheduled-security-scan:
    name: Scheduled Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Build and Security Analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          echo "üîç Running scheduled security analysis..."
          mvn clean verify sonar:sonar \
            -Dsonar.projectKey=${{ secrets.SONAR_ORGANIZATION }}_cicd-demo-practical_4a- \
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }} \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.qualitygate.wait=true

      - name: Check Quality Gate Status
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          # Wait a moment for SonarCloud to process
          sleep 30
          
          echo "üìä Fetching quality gate status..."
          PROJECT_KEY="${{ secrets.SONAR_ORGANIZATION }}_cicd-demo-practical_4a-"
          
          # Fetch quality gate status from SonarCloud API
          RESPONSE=$(curl -s -u "$SONAR_TOKEN:" \
            "https://sonarcloud.io/api/qualitygates/project_status?projectKey=$PROJECT_KEY")
          
          STATUS=$(echo "$RESPONSE" | jq -r '.projectStatus.status // "UNKNOWN"')
          
          echo "Quality Gate Status: $STATUS"
          
          if [ "$STATUS" = "OK" ]; then
            echo "‚úÖ Quality Gate Passed - Security analysis successful"
            echo "Dashboard: https://sonarcloud.io/dashboard?id=$PROJECT_KEY"
          elif [ "$STATUS" = "ERROR" ]; then
            echo "‚ùå Quality Gate Failed - Security issues detected"
            echo "Dashboard: https://sonarcloud.io/dashboard?id=$PROJECT_KEY"
            
            # Extract condition details
            echo "$RESPONSE" | jq -r '.projectStatus.conditions[]? | "- " + .metricKey + ": " + .status + " (" + (.actualValue // "N/A") + ")"'
            exit 1
          else
            echo "‚ö†Ô∏è  Unable to determine quality gate status"
            echo "Response: $RESPONSE"
            exit 1
          fi

      - name: Security Report Summary
        if: failure()
        run: |
          echo "üö® SECURITY ALERT: Weekly scan failed!"
          echo ""
          echo "Action Required:"
          echo "1. Check SonarCloud dashboard for detailed findings"
          echo "2. Review and fix critical security vulnerabilities"
          echo "3. Address security hotspots requiring manual review"
          echo "4. Update quality gate conditions if needed"
          echo ""
          echo "Dashboard: https://sonarcloud.io/dashboard?id=${{ secrets.SONAR_ORGANIZATION }}_cicd-demo-practical_4a-"

      - name: Success Notification
        if: success()
        run: |
          echo "‚úÖ Weekly security scan completed successfully!"
          echo "No critical security issues detected."
          echo "Dashboard: https://sonarcloud.io/dashboard?id=${{ secrets.SONAR_ORGANIZATION }}_cicd-demo-practical_4a-"